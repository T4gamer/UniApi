# Generated by Django 4.2.3 on 2023-07-19 04:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='LectureTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.CharField(choices=[('09:00', '9:00 AM'), ('10:00', '10:00 AM'), ('12:00', '12:00 PM'), ('14:00', '2:00 PM')], max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('serial_number', models.IntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('date_of_birth', models.DateField()),
                ('place_of_birth', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=20)),
                ('living_place', models.CharField(max_length=20)),
                ('living_city', models.CharField(max_length=20)),
                ('arabic_first_name', models.CharField(max_length=30)),
                ('arabic_second_name', models.CharField(max_length=30)),
                ('arabic_third_name', models.CharField(max_length=30)),
                ('arabic_last_name', models.CharField(max_length=30)),
                ('marital_status', models.CharField(choices=[('M', 'Married'), ('S', 'Single')], max_length=1)),
                ('national_number', models.IntegerField()),
                ('phone_number', models.IntegerField()),
                ('credit_number', models.IntegerField()),
                ('residence', models.CharField(choices=[('I', 'inside'), ('O', 'outside')], max_length=1)),
                ('section', models.CharField(max_length=20)),
                ('division', models.CharField(max_length=20)),
                ('closest_family', models.CharField(max_length=30)),
                ('mother_name', models.CharField(max_length=30)),
                ('mothers_job', models.CharField(max_length=30)),
                ('other_to_call', models.CharField(max_length=30)),
                ('phone_number_email', models.CharField(max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='student_groups', related_query_name='student', to='auth.group', verbose_name='groups')),
                ('supervisor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='students.teacher')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='student_user_permissions', related_query_name='student', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.course')),
                ('lecture_time', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.lecturetime')),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_enrolled', models.DateField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.student')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='students',
            field=models.ManyToManyField(through='students.Enrollment', to='students.student'),
        ),
        migrations.AddField(
            model_name='course',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.teacher'),
        ),
    ]
